@model Helpers.Models.Personnel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <br />
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Name)
                @Html.ValidationMessageFor(x => x.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Lastname, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Lastname)
                @Html.ValidationMessageFor(x => x.Lastname)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Birthdate, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.Birthdate)
                @Html.ValidationMessageFor(x => x.Birthdate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.TC, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.TC)
                @Html.ValidationMessageFor(x => x.TC)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Gender, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(x => x.Gender, Model.Genders, "Choose one")
                @Html.ValidationMessageFor(x => x.Gender)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Status, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownListFor(x => x.Status, Model.Statuses, "Choose one")
                @Html.ValidationMessageFor(x => x.Status)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.HaveKid, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.CheckBoxFor(x => x.HaveKid) Do you have children?
                @Html.ValidationMessageFor(x => x.HaveKid)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Password, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.PasswordFor(x => x.Password)
                @Html.ValidationMessageFor(x => x.Password)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Info, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.TextAreaFor(x => x.Info, htmlAttributes: new { @cols = 30, @rows = 5 })
                @Html.ValidationMessageFor(x => x.Info)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}